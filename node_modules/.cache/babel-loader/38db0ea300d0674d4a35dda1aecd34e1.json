{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, signOut, updatePassword } from \"firebase/auth\";\nimport { getDatabase, ref, set } from \"firebase/database\";\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_APPKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID\n};\n\nclass Firebase {\n  constructor() {\n    this.doCreateUserWithEmailAndPassword = (email, password) => createUserWithEmailAndPassword(this.auth, email, password);\n\n    this.doSignInWithEmailAndPassword = (email, password) => signInWithEmailAndPassword(this.auth, email, password);\n\n    this.doSignOut = () => {\n      signOut(this.auth);\n    };\n\n    this.doPasswordReset = email => sendPasswordResetEmail(this.auth, email);\n\n    this.doPasswordUpdate = password => updatePassword(this.auth.currentUser, password);\n\n    this.doWriteUserData = (uid, username, email) => {\n      set(ref(this.db, \"users/\" + uid), {\n        username,\n        email\n      });\n    };\n\n    this.doGetUsers = () => {\n      const starCountRef = ref(this.db, \"users/\");\n      return starCountRef;\n    };\n\n    const app = initializeApp(config);\n    this.db = getDatabase();\n    this.auth = getAuth();\n  }\n\n}\n\nexport default Firebase;","map":{"version":3,"sources":["E:/project_gotravel/src/firebase.js"],"names":["initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","signOut","updatePassword","getDatabase","ref","set","config","apiKey","process","env","REACT_APP_FIREBASE_APPKEY","authDomain","REACT_APP_FIREBASE_AUTHDOMAIN","projectId","REACT_APP_FIREBASE_PROJECTID","storageBucket","REACT_APP_FIREBASE_STORAGEBUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGINGSENDERID","appId","REACT_APP_FIREBASE_APPID","Firebase","constructor","doCreateUserWithEmailAndPassword","email","password","auth","doSignInWithEmailAndPassword","doSignOut","doPasswordReset","doPasswordUpdate","currentUser","doWriteUserData","uid","username","db","doGetUsers","starCountRef","app"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACEC,OADF,EAEEC,0BAFF,EAGEC,8BAHF,EAIEC,sBAJF,EAKEC,OALF,EAMEC,cANF,QAOO,eAPP;AAQA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAsC,mBAAtC;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,yBADP;AAEbC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,6BAFX;AAGbC,EAAAA,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK,4BAHV;AAIbC,EAAAA,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,gCAJd;AAKbC,EAAAA,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,oCALlB;AAMbC,EAAAA,KAAK,EAAEX,OAAO,CAACC,GAAR,CAAYW;AANN,CAAf;;AASA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,GAAG;AAAA,SAOdC,gCAPc,GAOqB,CAACC,KAAD,EAAQC,QAAR,KACjC1B,8BAA8B,CAAC,KAAK2B,IAAN,EAAYF,KAAZ,EAAmBC,QAAnB,CARlB;;AAAA,SAUdE,4BAVc,GAUiB,CAACH,KAAD,EAAQC,QAAR,KAC7B3B,0BAA0B,CAAC,KAAK4B,IAAN,EAAYF,KAAZ,EAAmBC,QAAnB,CAXd;;AAAA,SAadG,SAbc,GAaF,MAAM;AAChB3B,MAAAA,OAAO,CAAC,KAAKyB,IAAN,CAAP;AACD,KAfa;;AAAA,SAiBdG,eAjBc,GAiBKL,KAAD,IAAWxB,sBAAsB,CAAC,KAAK0B,IAAN,EAAYF,KAAZ,CAjBrC;;AAAA,SAmBdM,gBAnBc,GAmBML,QAAD,IACjBvB,cAAc,CAAC,KAAKwB,IAAL,CAAUK,WAAX,EAAwBN,QAAxB,CApBF;;AAAA,SAsBdO,eAtBc,GAsBI,CAACC,GAAD,EAAMC,QAAN,EAAgBV,KAAhB,KAA0B;AAC1CnB,MAAAA,GAAG,CAACD,GAAG,CAAC,KAAK+B,EAAN,EAAU,WAAWF,GAArB,CAAJ,EAA+B;AAChCC,QAAAA,QADgC;AAEhCV,QAAAA;AAFgC,OAA/B,CAAH;AAID,KA3Ba;;AAAA,SA6BdY,UA7Bc,GA6BD,MAAM;AACjB,YAAMC,YAAY,GAAGjC,GAAG,CAAC,KAAK+B,EAAN,EAAU,QAAV,CAAxB;AACA,aAAOE,YAAP;AACD,KAhCa;;AACZ,UAAMC,GAAG,GAAG1C,aAAa,CAACU,MAAD,CAAzB;AACA,SAAK6B,EAAL,GAAUhC,WAAW,EAArB;AAEA,SAAKuB,IAAL,GAAY7B,OAAO,EAAnB;AACD;;AANY;;AAoCf,eAAewB,QAAf","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  sendPasswordResetEmail,\r\n  signOut,\r\n  updatePassword,\r\n} from \"firebase/auth\";\r\nimport { getDatabase, ref, set } from \"firebase/database\";\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_APPKEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\r\n  appId: process.env.REACT_APP_FIREBASE_APPID,\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    const app = initializeApp(config);\r\n    this.db = getDatabase();\r\n\r\n    this.auth = getAuth();\r\n  }\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    createUserWithEmailAndPassword(this.auth, email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    signInWithEmailAndPassword(this.auth, email, password);\r\n\r\n  doSignOut = () => {\r\n    signOut(this.auth);\r\n  };\r\n\r\n  doPasswordReset = (email) => sendPasswordResetEmail(this.auth, email);\r\n\r\n  doPasswordUpdate = (password) =>\r\n    updatePassword(this.auth.currentUser, password);\r\n\r\n  doWriteUserData = (uid, username, email) => {\r\n    set(ref(this.db, \"users/\" + uid), {\r\n      username,\r\n      email,\r\n    });\r\n  };\r\n\r\n  doGetUsers = () => {\r\n    const starCountRef = ref(this.db, \"users/\");\r\n    return starCountRef;\r\n  };\r\n}\r\n\r\nexport default Firebase;\r\n"]},"metadata":{},"sourceType":"module"}