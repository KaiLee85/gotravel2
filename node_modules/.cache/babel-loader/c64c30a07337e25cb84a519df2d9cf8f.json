{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { projectFirestore } from \"../firebase/config\";\n\nconst useFirestore = collection => {\n  _s();\n\n  const [docs, setDocs] = useState([]);\n  useEffect(() => {\n    const unsub = projectFirestore.collection(collection).orderBy(\"createdAt\", \"desc\").onSnapshot(snap => {\n      let documents = [];\n      snap.forEach(doc => {\n        documents.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setDocs(documents);\n    });\n    return () => unsub(); // this is a cleanup function that react will run when\n    // a component using the hook unmounts\n  }, [collection]);\n  return {\n    docs\n  };\n};\n\n_s(useFirestore, \"+T0lE56vJ9KU8atjOm2u+g1P1HQ=\");\n\nexport default useFirestore;","map":{"version":3,"sources":["E:/project_gotravel/src/gallery_hook/useFirestore.js"],"names":["useState","useEffect","projectFirestore","useFirestore","collection","docs","setDocs","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,MAAMC,YAAY,GAAIC,UAAD,IAAgB;AAAA;;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,KAAK,GAAGL,gBAAgB,CAC3BE,UADW,CACAA,UADA,EAEXI,OAFW,CAEH,WAFG,EAEU,MAFV,EAGXC,UAHW,CAGCC,IAAD,IAAU;AACpB,UAAIC,SAAS,GAAG,EAAhB;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAcC,GAAD,IAAS;AACpBF,QAAAA,SAAS,CAACG,IAAV,CAAe,EAAE,GAAGD,GAAG,CAACE,IAAJ,EAAL;AAAiBC,UAAAA,EAAE,EAAEH,GAAG,CAACG;AAAzB,SAAf;AACD,OAFD;AAGAV,MAAAA,OAAO,CAACK,SAAD,CAAP;AACD,KATW,CAAd;AAWA,WAAO,MAAMJ,KAAK,EAAlB,CAZc,CAad;AACA;AACD,GAfQ,EAeN,CAACH,UAAD,CAfM,CAAT;AAiBA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AACD,CArBD;;GAAMF,Y;;AAuBN,eAAeA,YAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore\r\n      .collection(collection)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snap) => {\r\n        let documents = [];\r\n        snap.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setDocs(documents);\r\n      });\r\n\r\n    return () => unsub();\r\n    // this is a cleanup function that react will run when\r\n    // a component using the hook unmounts\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n};\r\n\r\nexport default useFirestore;\r\n"]},"metadata":{},"sourceType":"module"}