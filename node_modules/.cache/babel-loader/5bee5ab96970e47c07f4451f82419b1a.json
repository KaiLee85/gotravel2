{"ast":null,"code":"var _jsxFileName = \"E:\\\\project_gotravel\\\\src\\\\pages\\\\Gallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ButtonAppBar from \"../component/navbar\";\nimport \"../assets/sty_gallery.css\";\nimport ImageGrid from \"../component/ImageGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Gallery = () => {\n  _s();\n\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const [selectedImg, setSelectedImg] = useState(null);\n  const types = [\"image/png\", \"image/jpeg\"];\n\n  const handleChange = e => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError(\"\");\n    } else {\n      setFile(null);\n      setError(\"Please select an image file (png or jpg)\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(ButtonAppBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sectionTitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MY GALLERY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"uploadform\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output\",\n            children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {\n              setSelectedImg: setSelectedImg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Gallery, \"1wDWwTYP4I5A8lh5CH1vji2UEFw=\");\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["E:/project_gotravel/src/pages/Gallery.js"],"names":["React","useState","useEffect","ButtonAppBar","ImageGrid","Gallery","file","setFile","error","setError","selectedImg","setSelectedImg","types","handleChange","e","selected","target","files","includes","type","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,2BAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAMW,KAAK,GAAG,CAAC,WAAD,EAAc,YAAd,CAAd;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf;;AAEA,QAAIF,QAAQ,IAAIH,KAAK,CAACM,QAAN,CAAeH,QAAQ,CAACI,IAAxB,CAAhB,EAA+C;AAC7CZ,MAAAA,OAAO,CAACQ,QAAD,CAAP;AACAN,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAHD,MAGO;AACLF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,0CAAD,CAAR;AACD;AACF,GAVD;;AAYA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAEI;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,uBACGL,KAAK,iBAAI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,wBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADZ,EAEGF,IAAI,iBAAI;AAAA,wBAAMA,IAAI,CAACc;AAAX;AAAA;AAAA;AAAA;AAAA,oBAFX,eAIE;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,SAAD;AAAW,cAAA,cAAc,EAAET;AAA3B;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA1CD;;GAAMN,O;;KAAAA,O;AA4CN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ButtonAppBar from \"../component/navbar\";\r\nimport \"../assets/sty_gallery.css\";\r\nimport ImageGrid from \"../component/ImageGrid\";\r\n\r\nconst Gallery = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [selectedImg, setSelectedImg] = useState(null);\r\n\r\n  const types = [\"image/png\", \"image/jpeg\"];\r\n\r\n  const handleChange = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError(\"\");\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please select an image file (png or jpg)\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"navbar\">\r\n        <ButtonAppBar />\r\n      </div>\r\n      <div className=\"sectionTitle\">\r\n        <h1>MY GALLERY</h1>\r\n        <form className=\"uploadform\">\r\n          <div className=\"App\">\r\n            <input type=\"file\" onChange={handleChange} />\r\n\r\n            <div className=\"output\">\r\n              {error && <div className=\"error\">{error}</div>}\r\n              {file && <div>{file.name}</div>}\r\n\r\n              <br />\r\n              <ImageGrid setSelectedImg={setSelectedImg} />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n"]},"metadata":{},"sourceType":"module"}